{
  "address": "0x1ce03bd7d47CB2A5951Fef94c3a1BF55c30Bf46E",
  "abi": [
    {
      "inputs": [],
      "name": "PIPELINE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER_SLOT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistry",
          "name": "registry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "getUnderlying",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRegistry",
          "name": "registry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareNum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareDenom",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf460ddd992216f1d2b2ff46604873885bd2b39dead3d32bf4b4d939a29188491",
  "receipt": {
    "to": null,
    "from": "0x90A4a90e6FAf88c4d709F666D26793F9e2B47183",
    "contractAddress": "0x1ce03bd7d47CB2A5951Fef94c3a1BF55c30Bf46E",
    "transactionIndex": 2,
    "gasUsed": "731228",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x0be1805e86835ca41630fe978c7857a83d2a266d4ec5be1ddfd562e5a56e9a7f",
    "transactionHash": "0xf460ddd992216f1d2b2ff46604873885bd2b39dead3d32bf4b4d939a29188491",
    "logs": [],
    "blockNumber": 31670429,
    "cumulativeGasUsed": "893603",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d926dd4491f51477086acd9f2ab9f278",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PIPELINE_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getUnderlying\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareDenom\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pipelines/PureUniswapV2Pipeline.sol\":\"PureUniswapV2Pipeline\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/interfaces/IPipeline.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"./IRegistry.sol\\\";\\n\\ninterface IPipeline {\\n    // MUTATIVE FUNCTIONS\\n\\n    function deposit(\\n        IRegistry registry,\\n        address vault,\\n        address tokenIn,\\n        uint256 amountIn\\n    ) external returns (uint256 price);\\n\\n    function withdraw(\\n        IRegistry registry,\\n        address vault,\\n        address tokenOut,\\n        uint256 shareNum,\\n        uint256 shareDenom\\n    ) external returns (uint256 amountOut);\\n\\n    // VIEW FUNCTIONS\\n\\n    function getUnderlying(address vault)\\n        external\\n        view\\n        returns (address[] memory tokens);\\n\\n    function getPrice(\\n        IRegistry registry,\\n        address vault,\\n        address account\\n    ) external view returns (uint256 price);\\n}\\n\",\"keccak256\":\"0x987b594ea0ec41b99bf50197cfc414776a2dcdabcf2ad5863afb383cec4d5b65\",\"license\":\"Unlicense\"},\"contracts/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.8.13;\\n\\ninterface IRegistry {\\n    function getVaultPipeline(address vault) external view returns (address);\\n\\n    function getPipelineData(bytes32 slot) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x3bdb2798375b9009b75416402ab3cb875a3a388cfa2056fe1be2dec480b6d044\",\"license\":\"Unlicense\"},\"contracts/pipelines/PureUniswapV2Pipeline.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\nimport \\\"../interfaces/IPipeline.sol\\\";\\n\\ncontract PureUniswapV2Pipeline is IPipeline {\\n    string public constant PIPELINE_NAME = \\\"PureUniswapV2Pipeline\\\";\\n\\n    bytes32 public constant ROUTER_SLOT =\\n        keccak256(abi.encodePacked(PIPELINE_NAME, \\\"router\\\"));\\n\\n    // MUTATIVE FUNCTIONS\\n\\n    function deposit(\\n        IRegistry registry,\\n        address vault,\\n        address tokenIn,\\n        uint256 amountIn\\n    ) external override returns (uint256 price) {\\n        uint256 amountOut;\\n        if (tokenIn != vault) {\\n            amountOut = _swap(registry, tokenIn, vault, amountIn);\\n        } else {\\n            amountOut = amountIn;\\n        }\\n\\n        // TODO: Here should be actual price estimation using pricefeeds\\n        price = amountOut;\\n    }\\n\\n    function withdraw(\\n        IRegistry registry,\\n        address vault,\\n        address tokenOut,\\n        uint256 shareNum,\\n        uint256 shareDenom\\n    ) external override returns (uint256 amountOut) {\\n        uint256 amountToWithdraw = (IERC20(vault).balanceOf(address(this)) *\\n            shareNum) / shareDenom;\\n        if (tokenOut != vault) {\\n            amountOut = _swap(registry, vault, tokenOut, amountToWithdraw);\\n        } else {\\n            amountOut = amountToWithdraw;\\n        }\\n    }\\n\\n    // VIEW FUNCTIONS\\n\\n    function getUnderlying(address vault)\\n        external\\n        pure\\n        override\\n        returns (address[] memory tokens)\\n    {\\n        tokens = new address[](1);\\n        tokens[0] = vault;\\n    }\\n\\n    function getPrice(\\n        IRegistry,\\n        address vault,\\n        address account\\n    ) external view override returns (uint256) {\\n        // TODO: Here should be actual price estimation using pricefeeds\\n        uint256 balance = IERC20(vault).balanceOf(account);\\n        uint8 decimals = IERC20Metadata(vault).decimals();\\n        if (decimals < 18) {\\n            return balance * 10**(18 - decimals);\\n        } else {\\n            return balance / 10**(decimals - 18);\\n        }\\n    }\\n\\n    // INTERNAL FUNCTIONS\\n\\n    function _swap(\\n        IRegistry registry,\\n        address from,\\n        address to,\\n        uint256 amountIn\\n    ) private returns (uint256) {\\n        address router = abi.decode(\\n            registry.getPipelineData(ROUTER_SLOT),\\n            (address)\\n        );\\n\\n        address[] memory path = new address[](2);\\n        (path[0], path[1]) = (from, to);\\n\\n        IERC20(from).approve(router, type(uint256).max);\\n        IUniswapV2Router02(router).swapExactTokensForTokens(\\n            amountIn,\\n            0,\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x4625545eb6369d07e13b6fe36bffee5357c53356925ac024dbd5a7b2c373872d\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630284c3f5146100675780633b6e5c5f1461008d5780634e89a711146100955780635cbc9b8d146100b55780637100d05c146100f657806397da6d3014610109575b600080fd5b61007a61007536600461065a565b61011c565b6040519081526020015b60405180910390f35b61007a610157565b6100a86100a33660046106ab565b6101ae565b604051610084919061070c565b6100e96040518060400160405280601581526020017450757265556e69737761705632506970656c696e6560581b81525081565b604051610084919061074f565b61007a610104366004610782565b610209565b61007a6101173660046107cd565b61033c565b600080846001600160a01b0316846001600160a01b03161461014b57610144868587866103fd565b905061014e565b50815b95945050505050565b6040518060400160405280601581526020017450757265556e69737761705632506970656c696e6560581b8152506040516020016101959190610828565b6040516020818303038152906040528051906020012081565b6040805160018082528183019092526060916020808301908036833701905050905081816000815181106101e4576101e4610868565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182918516906370a0823190602401602060405180830381865afa158015610254573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610278919061087e565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610897565b905060128160ff161015610315576102f78160126108d0565b61030290600a6109d9565b61030c90836109e8565b92505050610335565b6103206012826108d0565b61032b90600a6109d9565b61030c9083610a07565b9392505050565b6040516370a0823160e01b81523060048201526000908190839085906001600160a01b038916906370a0823190602401602060405180830381865afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad919061087e565b6103b791906109e8565b6103c19190610a07565b9050856001600160a01b0316856001600160a01b0316146103ef576103e8878787846103fd565b91506103f3565b8091505b5095945050505050565b600080856001600160a01b03166387ade7766040518060400160405280601581526020017450757265556e69737761705632506970656c696e6560581b81525060405160200161044d9190610828565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161048191815260200190565b600060405180830381865afa15801561049e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c69190810190610a5a565b8060200190518101906104d99190610aee565b604080516002808252606082018352929350600092909160208301908036833701905050905085858260008151811061051457610514610868565b602002602001018360018151811061052e5761052e610868565b6001600160a01b03938416602091820292909201015291811690915260405163095ea7b360e01b8152838216600482015260001960248201529087169063095ea7b3906044016020604051808303816000875af1158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190610b0b565b506040516338ed173960e01b81526001600160a01b038316906338ed1739906105ed908790600090869030904290600401610b2d565b6000604051808303816000875af115801561060c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106349190810190610b69565b506000979650505050505050565b6001600160a01b038116811461065757600080fd5b50565b6000806000806080858703121561067057600080fd5b843561067b81610642565b9350602085013561068b81610642565b9250604085013561069b81610642565b9396929550929360600135925050565b6000602082840312156106bd57600080fd5b813561033581610642565b600081518084526020808501945080840160005b838110156107015781516001600160a01b0316875295820195908201906001016106dc565b509495945050505050565b60208152600061033560208301846106c8565b60005b8381101561073a578181015183820152602001610722565b83811115610749576000848401525b50505050565b602081526000825180602084015261076e81604085016020870161071f565b601f01601f19169190910160400192915050565b60008060006060848603121561079757600080fd5b83356107a281610642565b925060208401356107b281610642565b915060408401356107c281610642565b809150509250925092565b600080600080600060a086880312156107e557600080fd5b85356107f081610642565b9450602086013561080081610642565b9350604086013561081081610642565b94979396509394606081013594506080013592915050565b6000825161083a81846020870161071f565b653937baba32b960d11b920191825250600601919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561089057600080fd5b5051919050565b6000602082840312156108a957600080fd5b815160ff8116811461033557600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8416808210156108ea576108ea6108ba565b90039392505050565b600181815b8085111561092e578160001904821115610914576109146108ba565b8085161561092157918102915b93841c93908002906108f8565b509250929050565b600082610945575060016109d3565b81610952575060006109d3565b816001811461096857600281146109725761098e565b60019150506109d3565b60ff841115610983576109836108ba565b50506001821b6109d3565b5060208310610133831016604e8410600b84101617156109b1575081810a6109d3565b6109bb83836108f3565b80600019048211156109cf576109cf6108ba565b0290505b92915050565b600061033560ff841683610936565b6000816000190483118215151615610a0257610a026108ba565b500290565b600082610a2457634e487b7160e01b600052601260045260246000fd5b500490565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a5257610a52610852565b604052919050565b600060208284031215610a6c57600080fd5b815167ffffffffffffffff80821115610a8457600080fd5b818401915084601f830112610a9857600080fd5b815181811115610aaa57610aaa610852565b610abd601f8201601f1916602001610a29565b9150808252856020828501011115610ad457600080fd5b610ae581602084016020860161071f565b50949350505050565b600060208284031215610b0057600080fd5b815161033581610642565b600060208284031215610b1d57600080fd5b8151801515811461033557600080fd5b85815284602082015260a060408201526000610b4c60a08301866106c8565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610b7c57600080fd5b825167ffffffffffffffff80821115610b9457600080fd5b818501915085601f830112610ba857600080fd5b815181811115610bba57610bba610852565b8060051b9150610bcb848301610a29565b8181529183018401918481019088841115610be557600080fd5b938501935b83851015610c0357845182529385019390850190610bea565b9897505050505050505056fea2646970667358221220c7d60b5d6dc59f80ba21f8182bdf91cb5b3f960c473ee9f2ad3247dcb2a7abea64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630284c3f5146100675780633b6e5c5f1461008d5780634e89a711146100955780635cbc9b8d146100b55780637100d05c146100f657806397da6d3014610109575b600080fd5b61007a61007536600461065a565b61011c565b6040519081526020015b60405180910390f35b61007a610157565b6100a86100a33660046106ab565b6101ae565b604051610084919061070c565b6100e96040518060400160405280601581526020017450757265556e69737761705632506970656c696e6560581b81525081565b604051610084919061074f565b61007a610104366004610782565b610209565b61007a6101173660046107cd565b61033c565b600080846001600160a01b0316846001600160a01b03161461014b57610144868587866103fd565b905061014e565b50815b95945050505050565b6040518060400160405280601581526020017450757265556e69737761705632506970656c696e6560581b8152506040516020016101959190610828565b6040516020818303038152906040528051906020012081565b6040805160018082528183019092526060916020808301908036833701905050905081816000815181106101e4576101e4610868565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182918516906370a0823190602401602060405180830381865afa158015610254573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610278919061087e565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610897565b905060128160ff161015610315576102f78160126108d0565b61030290600a6109d9565b61030c90836109e8565b92505050610335565b6103206012826108d0565b61032b90600a6109d9565b61030c9083610a07565b9392505050565b6040516370a0823160e01b81523060048201526000908190839085906001600160a01b038916906370a0823190602401602060405180830381865afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad919061087e565b6103b791906109e8565b6103c19190610a07565b9050856001600160a01b0316856001600160a01b0316146103ef576103e8878787846103fd565b91506103f3565b8091505b5095945050505050565b600080856001600160a01b03166387ade7766040518060400160405280601581526020017450757265556e69737761705632506970656c696e6560581b81525060405160200161044d9190610828565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161048191815260200190565b600060405180830381865afa15801561049e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c69190810190610a5a565b8060200190518101906104d99190610aee565b604080516002808252606082018352929350600092909160208301908036833701905050905085858260008151811061051457610514610868565b602002602001018360018151811061052e5761052e610868565b6001600160a01b03938416602091820292909201015291811690915260405163095ea7b360e01b8152838216600482015260001960248201529087169063095ea7b3906044016020604051808303816000875af1158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190610b0b565b506040516338ed173960e01b81526001600160a01b038316906338ed1739906105ed908790600090869030904290600401610b2d565b6000604051808303816000875af115801561060c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106349190810190610b69565b506000979650505050505050565b6001600160a01b038116811461065757600080fd5b50565b6000806000806080858703121561067057600080fd5b843561067b81610642565b9350602085013561068b81610642565b9250604085013561069b81610642565b9396929550929360600135925050565b6000602082840312156106bd57600080fd5b813561033581610642565b600081518084526020808501945080840160005b838110156107015781516001600160a01b0316875295820195908201906001016106dc565b509495945050505050565b60208152600061033560208301846106c8565b60005b8381101561073a578181015183820152602001610722565b83811115610749576000848401525b50505050565b602081526000825180602084015261076e81604085016020870161071f565b601f01601f19169190910160400192915050565b60008060006060848603121561079757600080fd5b83356107a281610642565b925060208401356107b281610642565b915060408401356107c281610642565b809150509250925092565b600080600080600060a086880312156107e557600080fd5b85356107f081610642565b9450602086013561080081610642565b9350604086013561081081610642565b94979396509394606081013594506080013592915050565b6000825161083a81846020870161071f565b653937baba32b960d11b920191825250600601919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561089057600080fd5b5051919050565b6000602082840312156108a957600080fd5b815160ff8116811461033557600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8416808210156108ea576108ea6108ba565b90039392505050565b600181815b8085111561092e578160001904821115610914576109146108ba565b8085161561092157918102915b93841c93908002906108f8565b509250929050565b600082610945575060016109d3565b81610952575060006109d3565b816001811461096857600281146109725761098e565b60019150506109d3565b60ff841115610983576109836108ba565b50506001821b6109d3565b5060208310610133831016604e8410600b84101617156109b1575081810a6109d3565b6109bb83836108f3565b80600019048211156109cf576109cf6108ba565b0290505b92915050565b600061033560ff841683610936565b6000816000190483118215151615610a0257610a026108ba565b500290565b600082610a2457634e487b7160e01b600052601260045260246000fd5b500490565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a5257610a52610852565b604052919050565b600060208284031215610a6c57600080fd5b815167ffffffffffffffff80821115610a8457600080fd5b818401915084601f830112610a9857600080fd5b815181811115610aaa57610aaa610852565b610abd601f8201601f1916602001610a29565b9150808252856020828501011115610ad457600080fd5b610ae581602084016020860161071f565b50949350505050565b600060208284031215610b0057600080fd5b815161033581610642565b600060208284031215610b1d57600080fd5b8151801515811461033557600080fd5b85815284602082015260a060408201526000610b4c60a08301866106c8565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610b7c57600080fd5b825167ffffffffffffffff80821115610b9457600080fd5b818501915085601f830112610ba857600080fd5b815181811115610bba57610bba610852565b8060051b9150610bcb848301610a29565b8181529183018401918481019088841115610be557600080fd5b938501935b83851015610c0357845182529385019390850190610bea565b9897505050505050505056fea2646970667358221220c7d60b5d6dc59f80ba21f8182bdf91cb5b3f960c473ee9f2ad3247dcb2a7abea64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}