{
  "address": "0xBB03Cf9c317c130D109840c3F81A6eb6d1C91Ffe",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "getPipelineData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getVaultPipeline",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "slot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setPipelineData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pipeline",
          "type": "address"
        }
      ],
      "name": "setVaultPipeline",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x84f1c54e40eb0285b1b24ab5e74f699b00ccaed9af1b1825d3ffcd0bdf1053c8",
  "receipt": {
    "to": null,
    "from": "0x90A4a90e6FAf88c4d709F666D26793F9e2B47183",
    "contractAddress": "0xBB03Cf9c317c130D109840c3F81A6eb6d1C91Ffe",
    "transactionIndex": 1,
    "gasUsed": "442839",
    "logsBloom": "0x
    "blockHash": "0x2670419a9b15978bfca5ebb76906d76e3661c757733d243755db6a3ab6ffcb8f",
    "transactionHash": "0x84f1c54e40eb0285b1b24ab5e74f699b00ccaed9af1b1825d3ffcd0bdf1053c8",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 31670422,
        "transactionHash": "0x84f1c54e40eb0285b1b24ab5e74f699b00ccaed9af1b1825d3ffcd0bdf1053c8",
        "address": "0xBB03Cf9c317c130D109840c3F81A6eb6d1C91Ffe",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000090a4a90e6faf88c4d709f666d26793f9e2b47183"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x2670419a9b15978bfca5ebb76906d76e3661c757733d243755db6a3ab6ffcb8f"
      }
    ],
    "blockNumber": 31670422,
    "cumulativeGasUsed": "601500",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d926dd4491f51477086acd9f2ab9f278",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"getPipelineData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getVaultPipeline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setPipelineData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeline\",\"type\":\"address\"}],\"name\":\"setVaultPipeline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\n\\ncontract Registry is IRegistry, Ownable {\\n    mapping(address => address) public getVaultPipeline;\\n\\n    mapping(bytes32 => bytes) public getPipelineData;\\n\\n    // RESTRICTED FUNCTIONS\\n\\n    function setVaultPipeline(address vault, address pipeline)\\n        external\\n        onlyOwner\\n    {\\n        getVaultPipeline[vault] = pipeline;\\n    }\\n\\n    function setPipelineData(bytes32 slot, bytes memory data)\\n        external\\n        onlyOwner\\n    {\\n        getPipelineData[slot] = data;\\n    }\\n}\\n\",\"keccak256\":\"0xa7d7338b2978a2a8fbb8c2c29596f25816a08fd111bef41204ffa746601fc16e\",\"license\":\"Unlicense\"},\"contracts/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.8.13;\\n\\ninterface IRegistry {\\n    function getVaultPipeline(address vault) external view returns (address);\\n\\n    function getPipelineData(bytes32 slot) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x3bdb2798375b9009b75416402ab3cb875a3a388cfa2056fe1be2dec480b6d044\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106988061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806387ade7761161005b57806387ade776146100b25780638b3f14f0146100db5780638da5cb5b1461011c578063f2fde38b1461012d57600080fd5b80630b436e9b14610082578063715018a61461009757806373144ff91461009f575b600080fd5b61009561009036600461045f565b610140565b005b6100956101a1565b6100956100ad3660046104a8565b6101d7565b6100c56100c0366004610563565b610225565b6040516100d2919061057c565b60405180910390f35b6101046100e93660046105d1565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6000546001600160a01b0316610104565b61009561013b3660046105d1565b6102bf565b6000546001600160a01b031633146101735760405162461bcd60e51b815260040161016a906105f3565b60405180910390fd5b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146101cb5760405162461bcd60e51b815260040161016a906105f3565b6101d5600061035a565b565b6000546001600160a01b031633146102015760405162461bcd60e51b815260040161016a906105f3565b60008281526002602090815260409091208251610220928401906103aa565b505050565b6002602052600090815260409020805461023e90610628565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610628565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b6000546001600160a01b031633146102e95760405162461bcd60e51b815260040161016a906105f3565b6001600160a01b03811661034e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161016a565b6103578161035a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546103b690610628565b90600052602060002090601f0160209004810192826103d8576000855561041e565b82601f106103f157805160ff191683800117855561041e565b8280016001018555821561041e579182015b8281111561041e578251825591602001919060010190610403565b5061042a92915061042e565b5090565b5b8082111561042a576000815560010161042f565b80356001600160a01b038116811461045a57600080fd5b919050565b6000806040838503121561047257600080fd5b61047b83610443565b915061048960208401610443565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104bb57600080fd5b82359150602083013567ffffffffffffffff808211156104da57600080fd5b818501915085601f8301126104ee57600080fd5b81358181111561050057610500610492565b604051601f8201601f19908116603f0116810190838211818310171561052857610528610492565b8160405282815288602084870101111561054157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561057557600080fd5b5035919050565b600060208083528351808285015260005b818110156105a95785810183015185820160400152820161058d565b818111156105bb576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156105e357600080fd5b6105ec82610443565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061063c57607f821691505b60208210810361065c57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203fb321145eb8a35e138c9bba58477082846c7fc5b317d89bf3ae4c58f6f5746264736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806387ade7761161005b57806387ade776146100b25780638b3f14f0146100db5780638da5cb5b1461011c578063f2fde38b1461012d57600080fd5b80630b436e9b14610082578063715018a61461009757806373144ff91461009f575b600080fd5b61009561009036600461045f565b610140565b005b6100956101a1565b6100956100ad3660046104a8565b6101d7565b6100c56100c0366004610563565b610225565b6040516100d2919061057c565b60405180910390f35b6101046100e93660046105d1565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6000546001600160a01b0316610104565b61009561013b3660046105d1565b6102bf565b6000546001600160a01b031633146101735760405162461bcd60e51b815260040161016a906105f3565b60405180910390fd5b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146101cb5760405162461bcd60e51b815260040161016a906105f3565b6101d5600061035a565b565b6000546001600160a01b031633146102015760405162461bcd60e51b815260040161016a906105f3565b60008281526002602090815260409091208251610220928401906103aa565b505050565b6002602052600090815260409020805461023e90610628565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610628565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b6000546001600160a01b031633146102e95760405162461bcd60e51b815260040161016a906105f3565b6001600160a01b03811661034e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161016a565b6103578161035a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546103b690610628565b90600052602060002090601f0160209004810192826103d8576000855561041e565b82601f106103f157805160ff191683800117855561041e565b8280016001018555821561041e579182015b8281111561041e578251825591602001919060010190610403565b5061042a92915061042e565b5090565b5b8082111561042a576000815560010161042f565b80356001600160a01b038116811461045a57600080fd5b919050565b6000806040838503121561047257600080fd5b61047b83610443565b915061048960208401610443565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104bb57600080fd5b82359150602083013567ffffffffffffffff808211156104da57600080fd5b818501915085601f8301126104ee57600080fd5b81358181111561050057610500610492565b604051601f8201601f19908116603f0116810190838211818310171561052857610528610492565b8160405282815288602084870101111561054157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561057557600080fd5b5035919050565b600060208083528351808285015260005b818110156105a95785810183015185820160400152820161058d565b818111156105bb576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156105e357600080fd5b6105ec82610443565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061063c57607f821691505b60208210810361065c57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203fb321145eb8a35e138c9bba58477082846c7fc5b317d89bf3ae4c58f6f5746264736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1815,
        "contract": "contracts/Registry.sol:Registry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5012,
        "contract": "contracts/Registry.sol:Registry",
        "label": "getVaultPipeline",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 5016,
        "contract": "contracts/Registry.sol:Registry",
        "label": "getPipelineData",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bytes_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes32,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      }
    }
  }
}